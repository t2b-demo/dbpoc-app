{"version":3,"sources":["config.js","components/TableComponent/UpdateDoc.js","components/TableComponent/Pagination.js","components/TableComponent/Table.js","components/TableComponent/TableComponent.js","components/TreeComponent/TreeDisplay.js","components/TreeComponent/WinnerButton.js","components/TreeComponent/DocumentDisplay.js","components/TreeComponent/TreeComponent.js","components/ControlPanel/InsertDoc.js","components/ControlPanel/SyncButton.js","components/ControlPanel/ControlPanel.js","components/MainPage.js","components/Home.js","components/PageNotFound.js","components/LoaderButton.js","components/Login.js","components/Signup.js","routes/AppliedRoute.js","routes/AuthenticatedRoute.js","routes/UnauthenticatedRoute.js","Routes.js","App.js","index.js"],"names":["config","REGION","USER_POOL_ID","APP_CLIENT_ID","IDENTITY_POOL_ID","UpdateDoc","handleSingleUpdateClick","event","preventDefault","updatedObj","Object","assign","_this","props","selectedDoc","name","target","value","age","parseInt","company","email","phone","console","log","closeModal","react_default","a","createElement","className","onSubmit","this","htmlFor","type","defaultValue","onClick","React","Component","Pagination","handleLeftClick","handlePaginationClick","handleRightClick","getMaxRange","maxMultiple","page","tableMax","dataLength","getMinRange","concat","Table","headers","rows","HEADERS","TableComponent","state","showUpdateModal","handleOpenModal","obj","setState","handleCloseModal","direction","prevState","Math","ceil","data","docs","length","generateHeaders","h","map","header","idx","key","generateRows","slice","doc","cells","j","_id","toLowerCase","metaDoc","metaDocs","find","conflictBoolean","conflicts","treeBtnColor","handleViewTreeClick","handleSingleDeleteClick","headerComponents","rowComponents","TableComponent_Pagination","TableComponent_Table","index_es","open","onClose","showCloseIcon","center","TableComponent_UpdateDoc","TreeDisplay","generateTree","selectedTreeMetaDoc","newTree","revTree","_revisions","winningRev","_winningRev","traverseRevTree","node","newNode","circleProps","gProps","children","nodeChildren","_deleted","handleTreeDocClick","i","childNode","push","tree","treeData","dist_default","height","width","svgProps","nodeOffset","nodeRadius","margins","bottom","left","right","top","Grid","Row","Col","md","WinnerButton","Button","bsStyle","handlePickWinnerClick","DocumentDisplay","selectedTreeDoc","JSONPretty_default","id","json","TreeComponent_WinnerButton","TreeComponent","style","marginTop","xsOffset","TreeComponent_TreeDisplay","mdOffset","TreeComponent_DocumentDisplay","InsertDoc","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleInsertClick","insertObj","handleChange","defineProperty","bind","assertThisInitialized","onChange","paddingLeft","SyncButton","FormGroup","marginRight","handleSyncClick","disabled","autoSync","Checkbox","inline","checked","handleAutoSyncClick","ControlPanel","ControlPanel_InsertDoc","ControlPanel_SyncButton","dbName","turtleDB","TurtleDB","setRemote","window","MainPage","setDefaultState","benchmark","time","count","storage","appUsage","appQuota","totalQuota","syncStateWithTurtleDB","readAllMetaDocsAndDocs","then","updateTreeDocs","updateStorageInfo","updatedMetaDoc","getStorageInfo","info","startTime","Date","now","create","timeSpent","handleDeleteClick","n","idb","deleteBetweenNumbers","handleUpdateClick","editFirstNDocuments","handleDropDatabase","dropDB","sync","catch","err","autoSyncOff","clearInterval","intervalId","autoSyncOn","setInterval","handleCompactClick","compactStore","update","delete","rev","read","makeRevWinner","components_ControlPanel_ControlPanel","components_TreeComponent_TreeComponent","mdPush","components_TableComponent_TableComponent","Home","isLoading","isAuthenticated","e","alert","MainPage_MainPage","renderMainPage","renderLanding","components_PageNotFound","components_LoaderButton","_ref","text","loadingText","_ref$className","_ref$disabled","objectWithoutProperties","Glyphicon","glyph","Login","handleSubmit","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","Auth","signIn","password","userHasAuthenticated","t0","message","stop","_x","apply","arguments","handleLogout","_ref2","_callee2","_context2","signOut","history","_x2","controlId","bsSize","ControlLabel","FormControl","autoFocus","block","validateForm","Signup","newUser","handleConfirmationSubmit","confirmPassword","confirmationCode","HelpBlock","validateConfirmationForm","renderForm","renderConfirmationForm","AppliedRoute","C","component","cProps","rest","Route","render","AuthenticatedRoute","Redirect","to","location","pathname","search","UnauthenticatedRoute","redirect","url","undefined","href","replace","results","RegExp","exec","decodeURIComponent","querystring","Routes","childProps","Switch","path","exact","PageNotFound","App","authenticated","isAuthenticating","currentSession","Navbar","fluid","collapseOnSelect","Header","Brand","Link","Toggle","Collapse","Nav","pullRight","NavItem","react","react_router_bootstrap_lib","withRouter","Amplify","configure","mandatorySignIn","region","userPoolId","identityPoolId","userPoolWebClientId","ReactDOM","BrowserRouter","src_App_0","document","getElementById"],"mappings":"wbAAeA,EACF,CACPC,OAAQ,eACRC,aAAc,yBACdC,cAAe,6BACfC,iBAAkB,iRCgETC,6MAlEbC,wBAA0B,SAAAC,GACxBA,EAAMC,iBACN,IAAMC,EAAaC,OAAOC,OAAOC,EAAKC,MAAMC,YAC1C,CACEC,KAAMR,EAAMS,OAAOD,KAAKE,MACxBC,IAAKC,SAASZ,EAAMS,OAAOE,IAAID,MAAO,IACtCG,QAASb,EAAMS,OAAOI,QAAQH,MAC9BI,MAAOd,EAAMS,OAAOK,MAAMJ,MAC1BK,MAAOf,EAAMS,OAAOM,MAAML,QAE5BM,QAAQC,IAAIf,GACdG,EAAKC,MAAMP,wBAAwBG,GACnCG,EAAKC,MAAMY,sFAIX,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,4BACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,eAAd,eAGFH,EAAAC,EAAAC,cAAA,QAAME,SAAUC,KAAKzB,yBACnBoB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACbH,EAAAC,EAAAC,cAAA,SAAOI,QAAQ,QAAf,QACAN,EAAAC,EAAAC,cAAA,SAAOK,KAAK,OAAOJ,UAAU,eAAed,KAAK,OAAOmB,aAAcH,KAAKlB,MAAMC,YAAYC,SAIjGW,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACbH,EAAAC,EAAAC,cAAA,SAAOI,QAAQ,OAAf,OACAN,EAAAC,EAAAC,cAAA,SAAOK,KAAK,SAASJ,UAAU,eAAed,KAAK,MAAMmB,aAAcH,KAAKlB,MAAMC,YAAYI,QAIlGQ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACbH,EAAAC,EAAAC,cAAA,SAAOI,QAAQ,SAAf,SACAN,EAAAC,EAAAC,cAAA,SAAOK,KAAK,QAAQJ,UAAU,eAAed,KAAK,QAAQmB,aAAcH,KAAKlB,MAAMC,YAAYO,UAInGK,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACbH,EAAAC,EAAAC,cAAA,SAAOI,QAAQ,SAAf,SACAN,EAAAC,EAAAC,cAAA,SAAOK,KAAK,QAAQJ,UAAU,eAAed,KAAK,QAAQmB,aAAcH,KAAKlB,MAAMC,YAAYQ,UAInGI,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACbH,EAAAC,EAAAC,cAAA,SAAOI,QAAQ,WAAf,WACAN,EAAAC,EAAAC,cAAA,SAAOK,KAAK,OAAOJ,UAAU,eAAed,KAAK,UAAUmB,aAAcH,KAAKlB,MAAMC,YAAYM,YAIpGM,EAAAC,EAAAC,cAAA,SAAOC,UAAU,kBAAkBI,KAAK,SAAShB,MAAM,WACvDS,EAAAC,EAAAC,cAAA,UAAQC,UAAU,iBAAiBZ,MAAM,SAASkB,QAASJ,KAAKlB,MAAMY,YAAtE,mBA5DcW,IAAMC,WCiDfC,6MAhDbC,gBAAkB,WAChB3B,EAAKC,MAAM2B,sBAAsB,WAGnCC,iBAAmB,WACjB7B,EAAKC,MAAM2B,sBAAsB,YAGnCE,YAAc,WACZ,IAAMC,EAAc/B,EAAKC,MAAM+B,KAAOhC,EAAKC,MAAMgC,SACjD,OAAOF,GAAe/B,EAAKC,MAAMiC,WAC/BH,EAAc/B,EAAKC,MAAMiC,cAG7BC,YAAc,WACZ,OAAiC,IAA1BnC,EAAKC,MAAMiC,WAAmB,GAAKlC,EAAKC,MAAM+B,KAAO,GAAKhC,EAAKC,MAAMgC,SAAW,2EAIvF,OACEnB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cACZH,EAAAC,EAAAC,cAAA,MAAIC,UAAS,aAAAmB,OAAejB,KAAKlB,MAAM+B,MAAQ,EAAI,WAAa,KAC9DlB,EAAAC,EAAAC,cAAA,KACEC,UAAU,YACVM,QAASJ,KAAKQ,iBAFhB,aAMFb,EAAAC,EAAAC,cAAA,MAAIC,UAAS,aAAAmB,OAAgBjB,KAAKlB,MAAM+B,KAAOb,KAAKlB,MAAMgC,SAAYd,KAAKlB,MAAMiC,WAAa,WAAa,KACzGpB,EAAAC,EAAAC,cAAA,KACEC,UAAU,YACVM,QAASJ,KAAKU,kBAFhB,UAOJf,EAAAC,EAAAC,cAAA,KAAGC,UAAU,iBAAb,cACcE,KAAKgB,cADnB,MACqChB,KAAKW,cAD1C,OAC6DX,KAAKlB,MAAMiC,qBAxCzDV,IAAMC,WCWhBY,mLATX,OACEvB,EAAAC,EAAAC,cAAA,SAAOC,UAAU,sDACfH,EAAAC,EAAAC,cAAA,aAAQG,KAAKlB,MAAMqC,SACnBxB,EAAAC,EAAAC,cAAA,aAAQG,KAAKlB,MAAMsC,cALPf,IAAMC,WCMpBe,EAAU,CAAC,OAAQ,MAAO,UAAW,QAAS,SA+GrCC,6MA5GbC,MAAQ,CACNC,iBAAiB,EACjBzC,YAAa,KACb8B,KAAM,EACNC,SAAU,KAGZW,gBAAkB,SAACC,GACjB7C,EAAK8C,SAAS,CAAEH,iBAAiB,EAAMzC,YAAa2C,OAGtDE,iBAAmB,WACjB/C,EAAK8C,SAAS,CAAEH,iBAAiB,EAAOzC,YAAa,UAGvD0B,sBAAwB,SAAAoB,GACJ,SAAdA,GAAwBhD,EAAK0C,MAAMV,KAAO,EAC5ChC,EAAK8C,SAAS,SAAAG,GACZ,MAAO,CAAEjB,KAAMiB,EAAUjB,KAAO,KAEX,UAAdgB,GAAyBhD,EAAK0C,MAAMV,KAAOkB,KAAKC,KAAKnD,EAAKC,MAAMmD,KAAKC,KAAKC,OAAStD,EAAK0C,MAAMT,WACvGjC,EAAK8C,SAAS,SAAAG,GACZ,MAAO,CAAEjB,KAAMiB,EAAUjB,KAAO,QAKtCuB,gBAAkB,WAChB,IAAMC,EAAIhB,EAAQiB,IAAI,SAACC,EAAQC,GAAT,OAAiB7C,EAAAC,EAAAC,cAAA,MAAI4C,IAAKF,EAASC,GAAMD,KAE/D,OACE5C,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,wBACbuC,MAKPK,aAAe,WACb,OAAO7D,EAAKC,MAAMmD,KAAKC,KAAKS,OAAO9D,EAAK0C,MAAMV,KAAO,GAAKhC,EAAK0C,MAAMT,SAAUjC,EAAK0C,MAAMV,KAAOhC,EAAK0C,MAAMT,UAAUwB,IAAI,SAAAM,GAExH,IAAMC,EAAQxB,EAAQiB,IAAI,SAACC,EAAQO,GAAT,OAAenD,EAAAC,EAAAC,cAAA,MAAI4C,IAAKG,EAAIG,IAAMD,GAAIF,EAAIL,EAAOS,kBAErEC,EAAUpE,EAAKC,MAAMmD,KAAKiB,SAASC,KAAK,SAAAF,GAAO,OAAIA,EAAQF,MAAQH,EAAIG,MACvEK,EAAkBR,EAAIS,UACtBC,EAAeF,EAAkB,UAAY,UAEnD,OACEzD,EAAAC,EAAAC,cAAA,MAAI4C,IAAKG,EAAIG,KACXpD,EAAAC,EAAAC,cAAA,MAAIC,UAAU,yBACZH,EAAAC,EAAAC,cAAA,YAAOuD,EAAkB,eAAO,UAChCzD,EAAAC,EAAAC,cAAA,UACEC,UAAS,WAAAmB,OAAaqC,EAAb,gBACTlD,QAAS,kBAAMvB,EAAKC,MAAMyE,oBAAoBN,KAFhD,aAIAtD,EAAAC,EAAAC,cAAA,UACEC,UAAU,2BACVM,QAAS,kBAAMvB,EAAKC,MAAM0E,wBAAwBZ,EAAIG,OAFxD,OAIApD,EAAAC,EAAAC,cAAA,UACEC,UAAU,2BACVM,QAAS,kBAAMvB,EAAK4C,gBAAgBmB,KAFtC,WAKDC,8EAOP,IAAIY,EACAC,EAOJ,OALI1D,KAAKlB,MAAMmD,KAAKC,KAAKC,OAAS,IAChCsB,EAAmBzD,KAAKoC,kBACxBsB,EAAgB1D,KAAK0C,gBAIrB/C,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC8D,EAAD,CACElD,sBAAuBT,KAAKS,sBAC5BM,WAAYf,KAAKlB,MAAMmD,KAAKC,KAAKC,OACjCtB,KAAMb,KAAKuB,MAAMV,KACjBC,SAAUd,KAAKuB,MAAMT,WAEvBnB,EAAAC,EAAAC,cAAC+D,EAAD,CACEzC,QAASsC,EACTrC,KAAMsC,IAEP1D,KAAKuB,MAAMC,iBAAmB7B,EAAAC,EAAAC,cAACgE,EAAA,EAAD,CAC7BC,KAAM9D,KAAKuB,MAAMC,gBACjBuC,QAAS/D,KAAK4B,iBACdoC,eAAe,EACfC,QAAQ,GAERtE,EAAAC,EAAAC,cAACqE,EAAD,CACE3F,wBAAyByB,KAAKlB,MAAMP,wBACpCQ,YAAaiB,KAAKuB,MAAMxC,YACxBW,WAAYM,KAAK4B,4BArGAvB,IAAMC,sCC8EpB6D,6MAjFbC,aAAe,WACb,IAAKvF,EAAKC,MAAMuF,oBAAuB,OAAO,EAE9C,IAAMC,EAAU,GACVC,EAAU1F,EAAKC,MAAMuF,oBAAoBG,WACzCC,EAAa5F,EAAKC,MAAMuF,oBAAoBK,YAGlD,OADA7F,EAAK8F,gBAAgBJ,EAASD,EAASG,GAChCH,KAGTK,gBAAkB,SAACC,EAAMC,GAEvBA,EAAQ7F,KAAO4F,EAAK,GAAGjC,MAAM,EAAG,GAAK,MACrCkC,EAAQC,YAAc,CAAEhF,UAAW,IACnC+E,EAAQE,OAAS,CAAEjF,UAAW,QAC9B+E,EAAQG,SAAW,GAEnB,IAAMC,EAAeL,EAAK,GAEE,IAAxBK,EAAa9C,SACf0C,EAAQC,YAAYhF,UAAY,WAE3B8E,EAAK,GAAGM,WACXL,EAAQE,OAAOjF,UAAY+E,EAAQE,OAAOjF,UAAY,aACtD+E,EAAQE,OAAO3E,QAAU,kBAAMvB,EAAKC,MAAMqG,mBAAmBtG,EAAKC,MAAMuF,oBAAoBtB,IAAK6B,EAAK,OAItGA,EAAK,KAAO/F,EAAKC,MAAMuF,oBAAoBK,cAC7CG,EAAQC,YAAYhF,UAAY,eAG9B8E,EAAK,GAAGM,WACVL,EAAQC,YAAYhF,UAAY,eAGlC,IAAK,IAAIsF,EAAI,EAAGA,EAAIH,EAAa9C,OAAQiD,IAAK,CAC5C,IAAIC,EAAYxG,EAAK8F,gBAAgBM,EAAaG,GAAI,IACtDP,EAAQG,SAASM,KAAKD,GAGxB,OAAOR,2EAIP,IAEIU,EAFEC,EAAWxF,KAAKoE,eAiBtB,OAbEmB,EADEC,EACK7F,EAAAC,EAAAC,cAAC4F,EAAA7F,EAAD,CACLqC,KAAMuD,EACNE,OAAQ,IACRC,MAAO,IACPC,SAAU,CAAE9F,UAAW,UACvB+F,YAAa,GACbC,WAAY,GACZC,QAAS,CAAEC,OAAQ,EAAGC,KAAM,EAAGC,MAAO,IAAKC,IAAK,MAG3CxG,EAAAC,EAAAC,cAAA,+BAIPF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACbH,EAAAC,EAAAC,cAAA,sCACAF,EAAAC,EAAAC,cAACuG,EAAA,EAAD,KACEzG,EAAAC,EAAAC,cAACwG,EAAA,EAAD,CAAKvG,UAAU,aACbH,EAAAC,EAAAC,cAACyG,EAAA,EAAD,CAAKC,GAAI,GACRhB,cAvEWlF,IAAMC,+CCUjBkG,mLAXX,OACE7G,EAAAC,EAAAC,cAAC4G,EAAA,EAAD,CACEC,QAAQ,UACRtG,QAASJ,KAAKlB,MAAM6H,uBAFtB,gCAHqBtG,IAAMC,WC8BlBsG,mLAzBX,IAAMhE,EAAM5C,KAAKlB,MAAM+H,gBAAkB7G,KAAKlB,MAAM+H,gBAAkB,GAEtE,OACElH,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACbH,EAAAC,EAAAC,cAAA,+BACAF,EAAAC,EAAAC,cAACuG,EAAA,EAAD,KACEzG,EAAAC,EAAAC,cAACwG,EAAA,EAAD,CAAKvG,UAAU,aACbH,EAAAC,EAAAC,cAACyG,EAAA,EAAD,CAAKC,GAAI,GACP5G,EAAAC,EAAAC,cAACiH,EAAAlH,EAAD,CACEmH,GAAG,cACHC,KAAMpE,OAKdjD,EAAAC,EAAAC,cAACoH,EAAD,CACEN,sBAAuB3G,KAAKlB,MAAM6H,iCAnBhBtG,IAAMC,WCwBrB4G,mLAvBX,OACEvH,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACuG,EAAA,EAAD,CAAMe,MAAO,CAACC,UAAW,KACvBzH,EAAAC,EAAAC,cAACwG,EAAA,EAAD,CAAKvG,UAAU,aACbH,EAAAC,EAAAC,cAACyG,EAAA,EAAD,CAAKC,GAAI,EAAGc,SAAU,GAClB1H,EAAAC,EAAAC,cAACyH,EAAD,CACEjD,oBAAqBrE,KAAKlB,MAAMuF,oBAChCc,mBAAoBnF,KAAKlB,MAAMqG,sBAGjCxF,EAAAC,EAAAC,cAACyG,EAAA,EAAD,CAAKC,GAAI,EAAGgB,SAAU,GACtB5H,EAAAC,EAAAC,cAAC2H,EAAD,CACEX,gBAAiB7G,KAAKlB,MAAM+H,gBAC5BF,sBAAuB3G,KAAKlB,MAAM6H,mCAfxBtG,IAAMC,mBC0FnBmH,cA5Fb,SAAAA,EAAY3I,GAAO,IAAAD,EAAA,OAAAF,OAAA+I,EAAA,EAAA/I,CAAAqB,KAAAyH,IACjB5I,EAAAF,OAAAgJ,EAAA,EAAAhJ,CAAAqB,KAAArB,OAAAiJ,EAAA,EAAAjJ,CAAA8I,GAAAI,KAAA7H,KAAMlB,KAcRgJ,kBAAoB,SAAAtJ,GAClBA,EAAMC,iBACN,IAAMsJ,EAAY,CAChB/I,KAAMH,EAAK0C,MAAMvC,KACjBG,IAAKC,SAASP,EAAK0C,MAAMpC,IAAK,IAC9BE,QAASR,EAAK0C,MAAMlC,QACpBC,MAAOT,EAAK0C,MAAMjC,MAClBC,MAAOV,EAAK0C,MAAMhC,OAEpBV,EAAKC,MAAMgJ,kBAAkBC,IAxBZlJ,EA2BnBmJ,aAAe,SAAAxJ,GACb,IAAMU,EAAQV,EAAMS,OAAOC,MACrBF,EAAOR,EAAMS,OAAOD,KAE1BH,EAAK8C,SAALhD,OAAAsJ,EAAA,EAAAtJ,CAAA,GACGK,EAAOE,KA7BVL,EAAK0C,MAAQ,CACXvC,KAAM,GACNG,IAAK,GACLG,MAAO,GACPC,MAAO,GACPF,QAAS,IAGXR,EAAKmJ,aAAenJ,EAAKmJ,aAAaE,KAAlBvJ,OAAAwJ,EAAA,EAAAxJ,QAAAwJ,EAAA,EAAAxJ,CAAAE,KACpBA,EAAKiJ,kBAAoBjJ,EAAKiJ,kBAAkBI,KAAvBvJ,OAAAwJ,EAAA,EAAAxJ,QAAAwJ,EAAA,EAAAxJ,CAAAE,KAZRA,wEAqCjB,OACEc,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,cAAcC,SAAUC,KAAK8H,mBAC3CnI,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACfH,EAAAC,EAAAC,cAAA,SAAOI,QAAQ,QAAf,QACAN,EAAAC,EAAAC,cAAA,SAAOK,KAAK,OAAOJ,UAAU,eAC3Bd,KAAK,OACLE,MAAOc,KAAKlB,MAAME,KAAMoJ,SAAUpI,KAAKgI,iBAG7CrI,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACfH,EAAAC,EAAAC,cAAA,SAAOI,QAAQ,OAAf,OACAN,EAAAC,EAAAC,cAAA,SAAOK,KAAK,SAASJ,UAAU,eAC7Bd,KAAK,MACLE,MAAOc,KAAKlB,MAAMK,IAAKiJ,SAAUpI,KAAKgI,iBAG5CrI,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACfH,EAAAC,EAAAC,cAAA,SAAOI,QAAQ,SAAf,SACAN,EAAAC,EAAAC,cAAA,SAAOK,KAAK,QAAQJ,UAAU,eAC5Bd,KAAK,QACLE,MAAOc,KAAKlB,MAAMQ,MAAO8I,SAAUpI,KAAKgI,iBAG9CrI,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACfH,EAAAC,EAAAC,cAAA,SAAOI,QAAQ,SAAf,SACAN,EAAAC,EAAAC,cAAA,SAAOK,KAAK,QAAQJ,UAAU,eAC5Bd,KAAK,QACLE,MAAOc,KAAKlB,MAAMS,MAAO6I,SAAUpI,KAAKgI,iBAG9CrI,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACfH,EAAAC,EAAAC,cAAA,SAAOI,QAAQ,WAAf,WACAN,EAAAC,EAAAC,cAAA,SAAOK,KAAK,OAAOJ,UAAU,eAC3Bd,KAAK,UACLE,MAAOc,KAAKlB,MAAMO,QAAS+I,SAAUpI,KAAKgI,iBAGhDrI,EAAAC,EAAAC,cAAA,OAAKsH,MAAO,CAACC,UAAW,KACtBzH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,kBAAkBI,KAAK,SAAShB,MAAM,SACvDS,EAAAC,EAAAC,cAAA,UAAQC,UAAU,iBAAiBZ,MAAM,SAASiI,MAAO,CAACkB,YAAa,IAAKjI,QAASJ,KAAKlB,MAAMY,YAAhG,qBApFUW,IAAMC,6BCmCfgI,mLA/BX,OACE3I,EAAAC,EAAAC,cAAA,OAAKsH,MAAO,CAACC,UAAW,KACtBzH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACbH,EAAAC,EAAAC,cAAA,kCACAF,EAAAC,EAAAC,cAACuG,EAAA,EAAD,KACEzG,EAAAC,EAAAC,cAACwG,EAAA,EAAD,CAAKvG,UAAU,aACbH,EAAAC,EAAAC,cAACyG,EAAA,EAAD,CAAKC,GAAI,EAAGc,SAAU,GACpB1H,EAAAC,EAAAC,cAAC0I,EAAA,EAAD,KACE5I,EAAAC,EAAAC,cAAC4G,EAAA,EAAD,CACEU,MAAO,CAACqB,YAAa,IACrB9B,QAAQ,UACRtG,QAASJ,KAAKlB,MAAM2J,gBACpBC,SAAU1I,KAAKlB,MAAM6J,UAJvB,QAOAhJ,EAAAC,EAAAC,cAAC+I,EAAA,EAAD,CAAUC,QAAM,EACd9B,GAAG,qBACH+B,QAAS9I,KAAKlB,MAAM6J,SACpBP,SAAUpI,KAAKlB,MAAMiK,qBAHvB,yBAjBO1I,IAAMC,WCgBhB0I,mLAdX,OACErJ,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,kCACAF,EAAAC,EAAAC,cAACoJ,EAAD,CAAWnB,kBAAmB9H,KAAKlB,MAAMgJ,oBACzCnI,EAAAC,EAAAC,cAACqJ,EAAD,CACET,gBAAiBzI,KAAKlB,MAAM2J,gBAC5BM,oBAAqB/I,KAAKlB,MAAMiK,oBAChCJ,SAAU3I,KAAKlB,MAAM6J,mBATJtI,IAAMC,6BCM3B6I,WAAS,QACTC,GAAW,IAAIC,IAASF,IAC9BC,GAASE,UAAU,yBACnBC,OAAOH,SAAWA,OAIGI,eACnB,SAAAA,IAAc,IAAA3K,EAAA,OAAAF,OAAA+I,EAAA,EAAA/I,CAAAqB,KAAAwJ,IACV3K,EAAAF,OAAAgJ,EAAA,EAAAhJ,CAAAqB,KAAArB,OAAAiJ,EAAA,EAAAjJ,CAAA6K,GAAA3B,KAAA7H,QA0BJyJ,gBAAkB,WACd5K,EAAK8C,SAAS,CACZM,KAAM,CACJC,KAAM,GACNgB,SAAU,IAEZwG,UAAW,CACTC,KAAM,KACNzJ,KAAM,KACN0J,MAAO,MAETvF,oBAAqB,KACrBwC,gBAAiB,KACjB8B,UAAU,EACVkB,QAAS,CACPC,SAAU,MACVC,SAAU,MACVC,WAAY,UA5CNnL,EAiDdoL,sBAAwB,WACpBb,GAASc,yBACNC,KAAK,SAAAlI,GAAI,OAAIpD,EAAK8C,SAAS,CAAEM,KAAMA,MACnCkI,KAAK,kBAAMtL,EAAKuL,mBAChBD,KAAK,kBAAMtL,EAAKwL,uBArDTxL,EAwDduL,eAAiB,WACb,GAAIvL,EAAK0C,MAAM8C,oBAAqB,CAClC,IAAMiG,EAAiBzL,EAAK0C,MAAMU,KAAKiB,SAASC,KAAK,SAAAF,GAAO,OAAIA,EAAQF,MAAQlE,EAAK0C,MAAM8C,oBAAoBtB,MAE3GuH,EACFzL,EAAK8C,SAAS,CAAE0C,oBAAqBiG,IAErCzL,EAAK8C,SAAS,CAAE0C,oBAAqB,OAGzCxF,EAAK8C,SAAS,CAAEkF,gBAAiB,QAlEvBhI,EAqEdwL,kBAAoB,WAChBjB,GAASmB,iBACNJ,KAAK,SAAAK,GAAI,OAAI3L,EAAK8C,SAAS,CAAEkI,QAASW,OAvE/B3L,EA0EdiJ,kBAAoB,SAACpG,GACnB,IAAI+I,EAAYC,KAAKC,MACnBvB,GAASwB,OAAOlJ,GACfyI,KAAK,WACF,IAAIU,EAAYH,KAAKC,MAAQF,EAC7B5L,EAAK8C,SAAS,CACV+H,UAAW,CACXC,KAAMkB,EACN3K,KAAM,SACN0J,MAAO,OAIdO,KAAK,kBAAMtL,EAAKoL,2BAvFPpL,EA0FdiM,kBAAoB,SAAAC,GAChB,IAAIN,EAAYC,KAAKC,MACrBvB,GAAS4B,IAAIC,qBAAqB,EAAGF,GAClCZ,KAAK,WACJ,IAAIU,EAAYH,KAAKC,MAAQF,EAC7B5L,EAAK8C,SAAS,CACZ+H,UAAW,CACTC,KAAMkB,EACN3K,KAAM,SACN0J,MAAOmB,OAIZZ,KAAK,kBAAMtL,EAAKoL,2BAvGTpL,EA0GdqM,kBAAoB,SAACH,GACjB,IAAIN,EAAYC,KAAKC,MACrBvB,GAAS+B,oBAAoBJ,GAC1BZ,KAAK,WACJ,IAAIU,EAAYH,KAAKC,MAAQF,EAC7B5L,EAAK8C,SAAS,CACZ+H,UAAW,CACTC,KAAMkB,EACN3K,KAAM,OACN0J,MAAOmB,OAIZZ,KAAK,kBAAMtL,EAAKoL,2BAvHTpL,EA0HduM,mBAAqB,WACjBhC,GAASiC,OAAOlC,IACbgB,KAAK,kBAAMtL,EAAK4K,qBA5HT5K,EA+Hd4J,gBAAkB,WACdW,GAASkC,OACNnB,KAAK,kBAAMtL,EAAKoL,0BAChBsB,MAAM,SAACC,GAAD,OAAShM,QAAQC,IAAI,eAAgB+L,MAlIpC3M,EAqIdkK,oBAAsB,WACdlK,EAAK0C,MAAMoH,UAEbS,GAASqC,cACTC,cAAc7M,EAAK8M,cAEnBvC,GAASwC,aACT/M,EAAK8M,WAAaE,YAAYhN,EAAKoL,sBAAsB/B,KAA3BvJ,OAAAwJ,EAAA,EAAAxJ,QAAAwJ,EAAA,EAAAxJ,CAAAE,KAAuC,MAGvEA,EAAK8C,SAAS,SAACG,GAAD,MAAgB,CAAE6G,UAAW7G,EAAU6G,aA/I3C9J,EAkJdiN,mBAAqB,WACjB1C,GAAS2C,eACN5B,KAAK,kBAAMtL,EAAKoL,2BApJTpL,EAuJd0E,oBAAsB,SAACN,GACnBpE,EAAK8C,SAAS,CAAE0C,oBAAqBpB,IACrCpE,EAAK8C,SAAS,CAAEkF,gBAAiB,QAzJvBhI,EA4JdN,wBAA0B,SAACmD,GACvB0H,GAAS4C,OAAOtK,EAAIqB,IAAKrB,GACtByI,KAAK,kBAAMtL,EAAKoL,2BA9JTpL,EAiKd2E,wBAA0B,SAACT,GACvBqG,GAAS6C,OAAOlJ,GACboH,KAAK,kBAAMtL,EAAKoL,2BAnKTpL,EAsKdsG,mBAAqB,SAACpC,EAAKmJ,GACvB9C,GAAS+C,KAAKpJ,EAAKmJ,GAChB/B,KAAK,SAAAvH,GACJ/D,EAAK8C,SAAS,CAAEkF,gBAAiBjE,OAzK3B/D,EA6Kd8H,sBAAwB,WAEpBnH,QAAQC,IAAI,2BAA4BZ,EAAK0C,MAAMsF,iBAEnD,IAAMjE,EAAM/D,EAAK0C,MAAMsF,gBACvBuC,GAASgD,cAAcxJ,GACpBuH,KAAK,WACJtL,EAAKoL,2BAlLTpL,EAAK0C,MAAQ,CACTU,KAAM,CACJC,KAAM,GACNgB,SAAU,IAEZwG,UAAW,CACTC,KAAM,KACNzJ,KAAM,KACN0J,MAAO,MAETvF,oBAAqB,KACrBwC,gBAAiB,KACjB8B,UAAU,EACVkB,QAAS,CACPC,SAAU,MACVC,SAAU,MACVC,WAAY,QAlBRnL,mFAwBVmB,KAAKiK,yDAiKP,OACEtK,EAAAC,EAAAC,cAACuG,EAAA,EAAD,KACEzG,EAAAC,EAAAC,cAACwG,EAAA,EAAD,CAAKvG,UAAU,aACbH,EAAAC,EAAAC,cAACyG,EAAA,EAAD,CAAKC,GAAI,EAAGc,SAAU,GACpB1H,EAAAC,EAAAC,cAACwM,EAAD,CAAclF,MAAO,CAACC,UAAW,IAC7BU,kBAAmB9H,KAAK8H,kBACxBoD,kBAAmBlL,KAAKkL,kBACxBJ,kBAAmB9K,KAAK8K,kBACxBM,mBAAoBpL,KAAKoL,mBACzB3C,gBAAiBzI,KAAKyI,gBACtBM,oBAAqB/I,KAAK+I,oBAC1BJ,SAAU3I,KAAKuB,MAAMoH,SACrBmD,mBAAoB9L,KAAK8L,sBAG/BnM,EAAAC,EAAAC,cAACyG,EAAA,EAAD,KACE3G,EAAAC,EAAAC,cAACyM,EAAD,CACEjI,oBAAqBrE,KAAKuB,MAAM8C,oBAChCwC,gBAAiB7G,KAAKuB,MAAMsF,gBAC5B1B,mBAAoBnF,KAAKmF,mBACzBwB,sBAAuB3G,KAAK2G,0BAIlChH,EAAAC,EAAAC,cAACwG,EAAA,EAAD,CAAKvG,UAAU,YAAYqH,MAAO,CAACC,UAAW,KAC5CzH,EAAAC,EAAAC,cAACyG,EAAA,EAAD,CAAKC,GAAI,EAAGgG,OAAQ,GAClB5M,EAAAC,EAAAC,cAAC2M,EAAD,CACIvK,KAAMjC,KAAKuB,MAAMU,KACjBuB,wBAAyBxD,KAAKwD,wBAC9BjF,wBAAyByB,KAAKzB,wBAC9BgF,oBAAqBvD,KAAKuD,gCAxNJjD,aCZjBmM,eACnB,SAAAA,EAAY3N,GAAO,IAAAD,EAAA,OAAAF,OAAA+I,EAAA,EAAA/I,CAAAqB,KAAAyM,IACjB5N,EAAAF,OAAAgJ,EAAA,EAAAhJ,CAAAqB,KAAArB,OAAAiJ,EAAA,EAAAjJ,CAAA8N,GAAA5E,KAAA7H,KAAMlB,KAEDyC,MAAQ,CACXmL,WAAW,GAJI7N,8LASZmB,KAAKlB,MAAM6N,iEAIhB,IACE3M,KAAK2B,SAAS,CAAE+K,WAAW,IAC3B,MAAOE,GACPC,MAAMD,GAGR5M,KAAK2B,SAAS,CAAE+K,WAAW,8IAI3B,OACE/M,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAA,oBACAF,EAAAC,EAAAC,cAAA,8EAON,OACEF,EAAAC,EAAAC,cAACiN,GAAD,uCAKF,OACEnN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACZE,KAAKlB,MAAM6N,gBAAkB3M,KAAK+M,iBAAmB/M,KAAKgN,wBA3CjC1M,aCFnB2M,WAAA,kBACbtN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACbH,EAAAC,EAAAC,cAAA,8ECDWqN,WAAA,SAAAC,GAAA,IACbT,EADaS,EACbT,UACAU,EAFaD,EAEbC,KACAC,EAHaF,EAGbE,YAHaC,EAAAH,EAIbrN,iBAJa,IAAAwN,EAID,GAJCA,EAAAC,EAAAJ,EAKbzE,gBALa,IAAA6E,KAMVzO,EANUH,OAAA6O,GAAA,EAAA7O,CAAAwO,EAAA,kEAQbxN,EAAAC,EAAAC,cAAC4G,EAAA,EAAD9H,OAAAC,OAAA,CACE8H,QAAQ,UACR5G,UAAS,gBAAAmB,OAAkBnB,GAC3B4I,SAAUA,GAAYgE,GAClB5N,GAEH4N,GAAa/M,EAAAC,EAAAC,cAAC4N,GAAA,EAAD,CAAWC,MAAM,UAAU5N,UAAU,aACjD4M,EAAmBW,EAAPD,KCZGO,uBACnB,SAAAA,EAAY7O,GAAO,IAAAD,EAAA,OAAAF,OAAA+I,EAAA,EAAA/I,CAAAqB,KAAA2N,IACjB9O,EAAAF,OAAAgJ,EAAA,EAAAhJ,CAAAqB,KAAArB,OAAAiJ,EAAA,EAAAjJ,CAAAgP,GAAA9F,KAAA7H,KAAMlB,KAaRkJ,aAAe,SAAAxJ,GACbK,EAAK8C,SAALhD,OAAAsJ,EAAA,EAAAtJ,CAAA,GACGH,EAAMS,OAAO8H,GAAKvI,EAAMS,OAAOC,SAhBjBL,EAoBnB+O,aApBmB,eAAAT,EAAAxO,OAAAkP,EAAA,EAAAlP,CAAAmP,EAAAlO,EAAAmO,KAoBJ,SAAAC,EAAMxP,GAAN,OAAAsP,EAAAlO,EAAAqO,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACb5P,EAAMC,iBAENI,EAAK8C,SAAS,CAAE+K,WAAW,IAHdwB,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAMLC,OAAKC,OAAOzP,EAAK0C,MAAMjC,MAAOT,EAAK0C,MAAMgN,UANpC,OAOX1P,EAAKC,MAAM0P,sBAAqB,GAPrBN,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAO,GAAAP,EAAA,SASXrB,MAAMqB,EAAAO,GAAEC,SACR7P,EAAK8C,SAAS,CAAE+K,WAAW,IAVhB,yBAAAwB,EAAAS,SAAAX,EAAAhO,KAAA,YApBI,gBAAA4O,GAAA,OAAAzB,EAAA0B,MAAA7O,KAAA8O,YAAA,GAAAjQ,EAkCnBkQ,aAlCmB,eAAAC,EAAArQ,OAAAkP,EAAA,EAAAlP,CAAAmP,EAAAlO,EAAAmO,KAkCJ,SAAAkB,EAAMzQ,GAAN,OAAAsP,EAAAlO,EAAAqO,KAAA,SAAAiB,GAAA,cAAAA,EAAAf,KAAAe,EAAAd,MAAA,cAAAc,EAAAd,KAAA,EACPC,OAAKc,UADE,OAGbtQ,EAAK2P,sBAAqB,GAE1B3P,EAAKC,MAAMsQ,QAAQ9J,KAAK,UALX,wBAAA4J,EAAAP,SAAAM,EAAAjP,SAlCI,gBAAAqP,GAAA,OAAAL,EAAAH,MAAA7O,KAAA8O,YAAA,GAGjBjQ,EAAK0C,MAAQ,CACXmL,WAAW,EACXpN,MAAO,GACPiP,SAAU,IANK1P,8EAWjB,OAAOmB,KAAKuB,MAAMjC,MAAM6C,OAAS,GAAKnC,KAAKuB,MAAMgN,SAASpM,OAAS,mCAgCnE,OACExC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACbH,EAAAC,EAAAC,cAAA,QAAME,SAAUC,KAAK4N,cACnBjO,EAAAC,EAAAC,cAAC0I,EAAA,EAAD,CAAW+G,UAAU,QAAQC,OAAO,SAClC5P,EAAAC,EAAAC,cAAC2P,GAAA,EAAD,cACA7P,EAAAC,EAAAC,cAAC4P,GAAA,EAAD,CACEC,WAAS,EACTxP,KAAK,QACLhB,MAAOc,KAAKuB,MAAMjC,MAClB8I,SAAUpI,KAAKgI,gBAGnBrI,EAAAC,EAAAC,cAAC0I,EAAA,EAAD,CAAW+G,UAAU,WAAWC,OAAO,SACrC5P,EAAAC,EAAAC,cAAC2P,GAAA,EAAD,iBACA7P,EAAAC,EAAAC,cAAC4P,GAAA,EAAD,CACEvQ,MAAOc,KAAKuB,MAAMgN,SAClBnG,SAAUpI,KAAKgI,aACf9H,KAAK,cAGTP,EAAAC,EAAAC,cAACqN,GAAD,CACEyC,OAAK,EACLJ,OAAO,QACP7G,UAAW1I,KAAK4P,eAChB1P,KAAK,SACLwM,UAAW1M,KAAKuB,MAAMmL,UACtBU,KAAK,QACLC,YAAY,8BAvEW/M,wBCGduP,uBACnB,SAAAA,EAAY/Q,GAAO,IAAAD,EAAA,OAAAF,OAAA+I,EAAA,EAAA/I,CAAAqB,KAAA6P,IACjBhR,EAAAF,OAAAgJ,EAAA,EAAAhJ,CAAAqB,KAAArB,OAAAiJ,EAAA,EAAAjJ,CAAAkR,GAAAhI,KAAA7H,KAAMlB,KAwBRkJ,aAAe,SAAAxJ,GACbK,EAAK8C,SAALhD,OAAAsJ,EAAA,EAAAtJ,CAAA,GACGH,EAAMS,OAAO8H,GAAKvI,EAAMS,OAAOC,SA3BjBL,EA+BnB+O,aA/BmB,eAAAT,EAAAxO,OAAAkP,EAAA,EAAAlP,CAAAmP,EAAAlO,EAAAmO,KA+BJ,SAAAC,EAAMxP,GAAN,OAAAsP,EAAAlO,EAAAqO,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACb5P,EAAMC,iBAENI,EAAK8C,SAAS,CAAE+K,WAAW,IAE3B7N,EAAK8C,SAAS,CAAEmO,QAAS,SAEzBjR,EAAK8C,SAAS,CAAE+K,WAAW,IAPd,wBAAAwB,EAAAS,SAAAX,EAAAhO,SA/BI,gBAAA4O,GAAA,OAAAzB,EAAA0B,MAAA7O,KAAA8O,YAAA,GAAAjQ,EAyCnBkR,yBAzCmB,eAAAf,EAAArQ,OAAAkP,EAAA,EAAAlP,CAAAmP,EAAAlO,EAAAmO,KAyCQ,SAAAkB,EAAMzQ,GAAN,OAAAsP,EAAAlO,EAAAqO,KAAA,SAAAiB,GAAA,cAAAA,EAAAf,KAAAe,EAAAd,MAAA,OACzB5P,EAAMC,iBAENI,EAAK8C,SAAS,CAAE+K,WAAW,IAHF,wBAAAwC,EAAAP,SAAAM,EAAAjP,SAzCR,gBAAAqP,GAAA,OAAAL,EAAAH,MAAA7O,KAAA8O,YAAA,GAGjBjQ,EAAK0C,MAAQ,CACXmL,WAAW,EACXpN,MAAO,GACPiP,SAAU,GACVyB,gBAAiB,GACjBC,iBAAkB,GAClBH,QAAS,MATMjR,8EAcjB,OACEmB,KAAKuB,MAAMjC,MAAM6C,OAAS,GAC1BnC,KAAKuB,MAAMgN,SAASpM,OAAS,GAC7BnC,KAAKuB,MAAMgN,WAAavO,KAAKuB,MAAMyO,mEAKrC,OAAOhQ,KAAKuB,MAAM0O,iBAAiB9N,OAAS,mDA0B5C,OACExC,EAAAC,EAAAC,cAAA,QAAME,SAAUC,KAAK+P,0BACnBpQ,EAAAC,EAAAC,cAAC0I,EAAA,EAAD,CAAW+G,UAAU,mBAAmBC,OAAO,SAC7C5P,EAAAC,EAAAC,cAAC2P,GAAA,EAAD,0BACA7P,EAAAC,EAAAC,cAAC4P,GAAA,EAAD,CACEC,WAAS,EACTxP,KAAK,MACLhB,MAAOc,KAAKuB,MAAM0O,iBAClB7H,SAAUpI,KAAKgI,eAEjBrI,EAAAC,EAAAC,cAACqQ,GAAA,EAAD,+CAEFvQ,EAAAC,EAAAC,cAACqN,GAAD,CACEyC,OAAK,EACLJ,OAAO,QACP7G,UAAW1I,KAAKmQ,2BAChBjQ,KAAK,SACLwM,UAAW1M,KAAKuB,MAAMmL,UACtBU,KAAK,SACLC,YAAY,0DAOlB,OACE1N,EAAAC,EAAAC,cAAA,QAAME,SAAUC,KAAK4N,cACnBjO,EAAAC,EAAAC,cAAC0I,EAAA,EAAD,CAAW+G,UAAU,QAAQC,OAAO,SAClC5P,EAAAC,EAAAC,cAAC2P,GAAA,EAAD,cACA7P,EAAAC,EAAAC,cAAC4P,GAAA,EAAD,CACEC,WAAS,EACTxP,KAAK,QACLhB,MAAOc,KAAKuB,MAAMjC,MAClB8I,SAAUpI,KAAKgI,gBAGnBrI,EAAAC,EAAAC,cAAC0I,EAAA,EAAD,CAAW+G,UAAU,WAAWC,OAAO,SACrC5P,EAAAC,EAAAC,cAAC2P,GAAA,EAAD,iBACA7P,EAAAC,EAAAC,cAAC4P,GAAA,EAAD,CACEvQ,MAAOc,KAAKuB,MAAMgN,SAClBnG,SAAUpI,KAAKgI,aACf9H,KAAK,cAGTP,EAAAC,EAAAC,cAAC0I,EAAA,EAAD,CAAW+G,UAAU,kBAAkBC,OAAO,SAC5C5P,EAAAC,EAAAC,cAAC2P,GAAA,EAAD,yBACA7P,EAAAC,EAAAC,cAAC4P,GAAA,EAAD,CACEvQ,MAAOc,KAAKuB,MAAMyO,gBAClB5H,SAAUpI,KAAKgI,aACf9H,KAAK,cAGTP,EAAAC,EAAAC,cAACqN,GAAD,CACEyC,OAAK,EACLJ,OAAO,QACP7G,UAAW1I,KAAK4P,eAChB1P,KAAK,SACLwM,UAAW1M,KAAKuB,MAAMmL,UACtBU,KAAK,SACLC,YAAY,uDAOlB,OACE1N,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACW,OAAvBE,KAAKuB,MAAMuO,QACR9P,KAAKoQ,aACLpQ,KAAKqQ,iCAxHmB/P,cCPrBgQ,GAAA,SAAAnD,GAAA,IAAcoD,EAAdpD,EAAGqD,UAAqBC,EAAxBtD,EAAiBrO,MAAkB4R,EAAnC/R,OAAA6O,GAAA,EAAA7O,CAAAwO,EAAA,8BACbxN,EAAAC,EAAAC,cAAC8Q,EAAA,EAADhS,OAAAC,OAAA,GAAW8R,EAAX,CAAiBE,OAAQ,SAAA9R,GAAK,OAAIa,EAAAC,EAAAC,cAAC0Q,EAAD5R,OAAAC,OAAA,GAAOE,EAAW2R,mBCDtDI,GAAA,SAAe1D,GAAA,IAAcoD,EAAdpD,EAAGqD,UAAqBC,EAAxBtD,EAAiBrO,MAAkB4R,EAAnC/R,OAAA6O,GAAA,EAAA7O,CAAAwO,EAAA,8BACbxN,EAAAC,EAAAC,cAAC8Q,EAAA,EAADhS,OAAAC,OAAA,GACM8R,EADN,CAEEE,OAAQ,SAAA9R,GAAK,OACX2R,EAAO9D,gBACHhN,EAAAC,EAAAC,cAAC0Q,EAAD5R,OAAAC,OAAA,GAAOE,EAAW2R,IAClB9Q,EAAAC,EAAAC,cAACiR,GAAA,EAAD,CACEC,GAAE,mBAAA9P,OAAqBnC,EAAMkS,SAASC,UAApChQ,OAA+CnC,EAAMkS,SACpDE,eCQf,IAAAC,GAAA,SAAehE,GAA8C,IAAhCoD,EAAgCpD,EAA3CqD,UAAqBC,EAAsBtD,EAA7BrO,MAAkB4R,EAAW/R,OAAA6O,GAAA,EAAA7O,CAAAwO,EAAA,uBACnDiE,EAjBV,SAAqBpS,GAAkC,IAA5BqS,EAA4BvC,UAAA3M,OAAA,QAAAmP,IAAAxC,UAAA,GAAAA,UAAA,GAAtBvF,OAAOyH,SAASO,KAC7CvS,EAAOA,EAAKwS,QAAQ,QAAS,QAE7B,IACMC,EADQ,IAAIC,OAAO,OAAS1S,EAAO,oBAAqB,KACxC2S,KAAKN,GAE3B,OAAKI,EAGAA,EAAQ,GAING,mBAAmBH,EAAQ,GAAGD,QAAQ,MAAO,MAH3C,GAHA,KAUQK,CAAY,YAC7B,OACElS,EAAAC,EAAAC,cAAC8Q,EAAA,EAADhS,OAAAC,OAAA,GACM8R,EADN,CAEEE,OAAQ,SAAA9R,GAAK,OACV2R,EAAO9D,gBAEJhN,EAAAC,EAAAC,cAACiR,GAAA,EAAD,CACEC,GAAiB,KAAbK,GAAgC,OAAbA,EAAoB,IAAMA,IAFnDzR,EAAAC,EAAAC,cAAC0Q,EAAD5R,OAAAC,OAAA,GAAOE,EAAW2R,SCfjBqB,GAAA,SAAA3E,GAAA,IAAG4E,EAAH5E,EAAG4E,WAAH,OACbpS,EAAAC,EAAAC,cAACmS,EAAA,EAAD,KACErS,EAAAC,EAAAC,cAACyQ,GAAD,CAAc2B,KAAK,IAAIC,OAAK,EAAC1B,UAAW/D,GAAM3N,MAAOiT,IACrDpS,EAAAC,EAAAC,cAACsR,GAAD,CAAuBc,KAAK,SAASC,OAAK,EAAC1B,UAAW7C,GAAO7O,MAAOiT,IACpEpS,EAAAC,EAAAC,cAACsR,GAAD,CAAuBc,KAAK,UAAUC,OAAK,EAAC1B,UAAWX,GAAQ/Q,MAAOiT,IACtEpS,EAAAC,EAAAC,cAACgR,GAAD,CAAqBoB,KAAK,QAAQC,OAAK,EAAC1B,UAAWhH,GAAU1K,MAAOiT,IAGpEpS,EAAAC,EAAAC,cAAC8Q,EAAA,EAAD,CAAOH,UAAW2B,OCVhBC,eACJ,SAAAA,EAAYtT,GAAO,IAAAD,EAAA,OAAAF,OAAA+I,EAAA,EAAA/I,CAAAqB,KAAAoS,IACjBvT,EAAAF,OAAAgJ,EAAA,EAAAhJ,CAAAqB,KAAArB,OAAAiJ,EAAA,EAAAjJ,CAAAyT,GAAAvK,KAAA7H,KAAMlB,KAsBR0P,qBAAuB,SAAA6D,GACrBxT,EAAK8C,SAAS,CAAEgL,gBAAiB0F,KAxBhBxT,EA2BnBkQ,aA3BmB,eAAA5B,EAAAxO,OAAAkP,EAAA,EAAAlP,CAAAmP,EAAAlO,EAAAmO,KA2BJ,SAAAC,EAAMxP,GAAN,OAAAsP,EAAAlO,EAAAqO,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACPC,OAAKc,UADE,OAEbtQ,EAAK2P,sBAAqB,GAFb,wBAAAN,EAAAS,SAAAX,EAAAhO,SA3BI,gBAAA4O,GAAA,OAAAzB,EAAA0B,MAAA7O,KAAA8O,YAAA,GAGjBjQ,EAAK0C,MAAQ,CACXoL,iBAAiB,EACjB2F,kBAAkB,GALHzT,oNAWTwP,OAAKkE,wBACXvS,KAAKwO,sBAAqB,kDAGhB,oBAANU,EAAAT,IACF5B,MAAKqC,EAAAT,WAITzO,KAAK2B,SAAS,CAAE2Q,kBAAkB,gJAalC,IAAMP,EAAa,CACjBpF,gBAAiB3M,KAAKuB,MAAMoL,gBAC5B6B,qBAAsBxO,KAAKwO,sBAG7B,OACGxO,KAAKuB,MAAM+Q,kBACZ3S,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAAC2S,EAAA,EAAD,CAAQC,OAAK,EAACC,kBAAgB,GAC5B/S,EAAAC,EAAAC,cAAC2S,EAAA,EAAOG,OAAR,KACEhT,EAAAC,EAAAC,cAAC2S,EAAA,EAAOI,MAAR,KACEjT,EAAAC,EAAAC,cAACgT,EAAA,EAAD,CAAM9B,GAAG,KAAT,WAEFpR,EAAAC,EAAAC,cAAC2S,EAAA,EAAOM,OAAR,OAEFnT,EAAAC,EAAAC,cAAC2S,EAAA,EAAOO,SAAR,KACEpT,EAAAC,EAAAC,cAACmT,EAAA,EAAD,CAAKC,WAAS,GACXjT,KAAKuB,MAAMoL,gBACRhN,EAAAC,EAAAC,cAACqT,EAAA,EAAD,CAAS9S,QAASJ,KAAK+O,cAAvB,UACApP,EAAAC,EAAAC,cAACsT,EAAA,SAAD,KACExT,EAAAC,EAAAC,cAACuT,EAAA,cAAD,CAAerC,GAAG,WAChBpR,EAAAC,EAAAC,cAACqT,EAAA,EAAD,gBAEFvT,EAAAC,EAAAC,cAACuT,EAAA,cAAD,CAAerC,GAAG,UAChBpR,EAAAC,EAAAC,cAACqT,EAAA,EAAD,mBAOdvT,EAAAC,EAAAC,cAACiS,GAAD,CAAQC,WAAYA,YAjEVzR,aAuEH+S,eAAWjB,IChE1BkB,IAAQC,UAAU,CACdlF,KAAM,CACJmF,iBAAiB,EACjBC,OAAQxV,EAAeC,OACvBwV,WAAYzV,EAAeE,aAC3BwV,eAAgB1V,EAAeI,iBAC/BuV,oBAAqB3V,EAAeG,iBAI1CyV,IAASjD,OACLjR,EAAAC,EAAAC,cAACiU,EAAA,EAAD,KACEnU,EAAAC,EAAAC,cAACkU,GAAD,OAEFC,SAASC,eAAe","file":"static/js/main.4ff708bb.chunk.js","sourcesContent":["export default {\r\n    cognito: {\r\n      REGION: \"eu-central-1\",\r\n      USER_POOL_ID: \"eu-central-1_JpOAfqMqV\",\r\n      APP_CLIENT_ID: \"4ga1j0au5hrt4j2j8jg4f0qapl\",\r\n      IDENTITY_POOL_ID: \"eu-central-1:e4c0720c-71d1-433a-a325-d7bba790afb4\"\r\n    }\r\n  };","import React from 'react';\r\n\r\nclass UpdateDoc extends React.Component {\r\n  handleSingleUpdateClick = event => {\r\n    event.preventDefault();\r\n    const updatedObj = Object.assign(this.props.selectedDoc,\r\n      {\r\n        name: event.target.name.value,\r\n        age: parseInt(event.target.age.value, 10),\r\n        company: event.target.company.value,\r\n        email: event.target.email.value,\r\n        phone: event.target.phone.value,\r\n      })\r\n      console.log(updatedObj);\r\n    this.props.handleSingleUpdateClick(updatedObj);\r\n    this.props.closeModal();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"modal-content\">\r\n        <div className=\"modal-header text-center\">\r\n          <h5 className=\"modal-title\">Update Doc</h5>\r\n        </div>\r\n\r\n        <form onSubmit={this.handleSingleUpdateClick}>\r\n          <div className=\"form-row\">\r\n            <div className=\"form-group col\">\r\n              <label htmlFor=\"name\">Name</label>\r\n              <input type=\"text\" className=\"form-control\" name=\"name\" defaultValue={this.props.selectedDoc.name} />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"form-row\">\r\n            <div className=\"form-group col-md-6\">\r\n              <label htmlFor=\"age\">Age</label>\r\n              <input type=\"number\" className=\"form-control\" name=\"age\" defaultValue={this.props.selectedDoc.age} />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"form-row\">\r\n            <div className=\"form-group col\">\r\n              <label htmlFor=\"email\">Email</label>\r\n              <input type=\"email\" className=\"form-control\" name=\"email\" defaultValue={this.props.selectedDoc.email} />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"form-row\">\r\n            <div className=\"form-group col\">\r\n              <label htmlFor=\"phone\">Phone</label>\r\n              <input type=\"phone\" className=\"form-control\" name=\"phone\" defaultValue={this.props.selectedDoc.phone} />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"form-row\">\r\n            <div className=\"form-group col\">\r\n              <label htmlFor=\"company\">Company</label>\r\n              <input type=\"text\" className=\"form-control\" name=\"company\" defaultValue={this.props.selectedDoc.company} />\r\n            </div>\r\n          </div>\r\n\r\n          <input className=\"btn btn-primary\" type=\"submit\" value=\"Update\" />\r\n          <button className=\"btn btn-danger\" value=\"cancel\" onClick={this.props.closeModal}>Cancel</button>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default UpdateDoc;\r\n","import React from 'react';\r\n\r\nclass Pagination extends React.Component {\r\n  handleLeftClick = () => {\r\n    this.props.handlePaginationClick('LEFT');\r\n  }\r\n\r\n  handleRightClick = () => {\r\n    this.props.handlePaginationClick(\"RIGHT\");\r\n  }\r\n\r\n  getMaxRange = () => {\r\n    const maxMultiple = this.props.page * this.props.tableMax;\r\n    return maxMultiple <= this.props.dataLength ?\r\n      maxMultiple : this.props.dataLength;\r\n  }\r\n\r\n  getMinRange = () => {\r\n    return this.props.dataLength === 0 ? 0 : (this.props.page - 1) * this.props.tableMax + 1;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <nav>\r\n        <div className=\"d-flex\">\r\n          <ul className=\"pagination\">\r\n            <li className={`page-item ${this.props.page <= 1 ? \"disabled\" : \"\"}`}>\r\n              <a\r\n                className=\"page-link\"\r\n                onClick={this.handleLeftClick}\r\n              >Previous\r\n                </a>\r\n            </li>\r\n            <li className={`page-item ${(this.props.page * this.props.tableMax) > this.props.dataLength ? \"disabled\" : \"\"}`}>\r\n              <a\r\n                className=\"page-link\"\r\n                onClick={this.handleRightClick}\r\n              >Next\r\n                </a>\r\n            </li>\r\n          </ul>\r\n          <p className=\"display-pages\">\r\n            Displaying {this.getMinRange()} - {this.getMaxRange()} of {this.props.dataLength}\r\n          </p>\r\n        </div>\r\n      </nav>\r\n\r\n    )\r\n  }\r\n}\r\n\r\nexport default Pagination;","import React from 'react';\r\n\r\nclass Table extends React.Component {\r\n  render() {\r\n    return (\r\n      <table className='table table-striped table-bordered table-condensed'>\r\n        <thead>{this.props.headers}</thead>\r\n        <tbody>{this.props.rows}</tbody>\r\n      </table>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Table;\r\n","import React from 'react';\r\nimport Modal from 'react-responsive-modal';\r\n\r\n//components\r\nimport UpdateDoc from './UpdateDoc';\r\nimport Pagination from './Pagination';\r\nimport Table from './Table';\r\n\r\nconst HEADERS = ['Name', 'Age', 'Company', 'Email', 'Phone'];\r\n\r\nclass TableComponent extends React.Component {\r\n  state = {\r\n    showUpdateModal: false,\r\n    selectedDoc: null,\r\n    page: 1,\r\n    tableMax: 8,\r\n  }\r\n\r\n  handleOpenModal = (obj) => {\r\n    this.setState({ showUpdateModal: true, selectedDoc: obj });\r\n  }\r\n\r\n  handleCloseModal = () => {\r\n    this.setState({ showUpdateModal: false, selectedDoc: null });\r\n  }\r\n\r\n  handlePaginationClick = direction => {\r\n    if (direction === 'LEFT' && this.state.page > 1) {\r\n      this.setState(prevState => {\r\n        return { page: prevState.page - 1 }\r\n      });\r\n    } else if (direction === 'RIGHT' && this.state.page < Math.ceil(this.props.data.docs.length / this.state.tableMax)) {\r\n      this.setState(prevState => {\r\n        return { page: prevState.page + 1 }\r\n      });\r\n    }\r\n  }\r\n\r\n  generateHeaders = () => {\r\n    const h = HEADERS.map((header, idx) => <th key={header + idx}>{header}</th>)\r\n\r\n    return (\r\n      <tr>\r\n        <th className=\"row-butttons-header\"></th>\r\n        {h}\r\n      </tr>\r\n    );\r\n  }\r\n\r\n  generateRows = () => {\r\n    return this.props.data.docs.slice((this.state.page - 1) * this.state.tableMax, this.state.page * this.state.tableMax).map(doc => {\r\n\r\n      const cells = HEADERS.map((header, j) => <td key={doc._id + j}>{doc[header.toLowerCase()]}</td>);\r\n\r\n      const metaDoc = this.props.data.metaDocs.find(metaDoc => metaDoc._id === doc._id);\r\n      const conflictBoolean = doc.conflicts;\r\n      const treeBtnColor = conflictBoolean ? 'warning' : 'success';\r\n\r\n      return (\r\n        <tr key={doc._id}>\r\n          <td className=\"row-buttons-container\">\r\n            <span>{conflictBoolean ? '⚠️' : '✅'}</span>\r\n            <button\r\n              className={`btn btn-${treeBtnColor} btn-sm mx-2`}\r\n              onClick={() => this.props.handleViewTreeClick(metaDoc)}\r\n            >View Tree</button>\r\n            <button\r\n              className=\"btn btn-dark btn-sm mx-2\"\r\n              onClick={() => this.props.handleSingleDeleteClick(doc._id)}\r\n            >Del</button>\r\n            <button\r\n              className=\"btn btn-info btn-sm mx-2\"\r\n              onClick={() => this.handleOpenModal(doc)}\r\n            >Update</button>\r\n          </td>\r\n          {cells}\r\n        </tr>\r\n      );\r\n    });\r\n  }\r\n\r\n  render() {\r\n    let headerComponents;\r\n    let rowComponents;\r\n\r\n    if (this.props.data.docs.length > 0) {\r\n      headerComponents = this.generateHeaders();\r\n      rowComponents = this.generateRows();\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <Pagination\r\n          handlePaginationClick={this.handlePaginationClick}\r\n          dataLength={this.props.data.docs.length}\r\n          page={this.state.page}\r\n          tableMax={this.state.tableMax}\r\n        />\r\n        <Table\r\n          headers={headerComponents}\r\n          rows={rowComponents}\r\n        />\r\n        {this.state.showUpdateModal && <Modal\r\n          open={this.state.showUpdateModal}\r\n          onClose={this.handleCloseModal}\r\n          showCloseIcon={false}\r\n          center={true}\r\n        >\r\n          <UpdateDoc\r\n            handleSingleUpdateClick={this.props.handleSingleUpdateClick}\r\n            selectedDoc={this.state.selectedDoc}\r\n            closeModal={this.handleCloseModal}\r\n          />\r\n        </Modal>}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TableComponent;\r\n","import React from 'react';\r\nimport 'react-tree-graph/dist/style.css'\r\nimport { Grid, Row, Col } from 'react-bootstrap';\r\nimport './../../styles/tree.css';\r\nimport Tree from 'react-tree-graph';\r\n\r\nclass TreeDisplay extends React.Component {\r\n  generateTree = () => {\r\n    if (!this.props.selectedTreeMetaDoc) { return false; }\r\n\r\n    const newTree = {};\r\n    const revTree = this.props.selectedTreeMetaDoc._revisions;\r\n    const winningRev = this.props.selectedTreeMetaDoc._winningRev;\r\n\r\n    this.traverseRevTree(revTree, newTree, winningRev);\r\n    return newTree;\r\n  }\r\n\r\n  traverseRevTree = (node, newNode) => {\r\n    // Set up new node\r\n    newNode.name = node[0].slice(0, 5) + '...';\r\n    newNode.circleProps = { className: '' };\r\n    newNode.gProps = { className: 'node' };\r\n    newNode.children = [];\r\n\r\n    const nodeChildren = node[2];\r\n\r\n    if (nodeChildren.length === 0) {\r\n      newNode.circleProps.className = 'leaf-rev';\r\n\r\n      if (!node[1]._deleted) {\r\n        newNode.gProps.className = newNode.gProps.className + ' leaf-node';\r\n        newNode.gProps.onClick = () => this.props.handleTreeDocClick(this.props.selectedTreeMetaDoc._id, node[0]);\r\n      }\r\n    };\r\n\r\n    if (node[0] === this.props.selectedTreeMetaDoc._winningRev) {\r\n      newNode.circleProps.className = 'winning-rev';\r\n    }\r\n\r\n    if (node[1]._deleted) {\r\n      newNode.circleProps.className = 'deleted-rev';\r\n    }\r\n\r\n    for (let i = 0; i < nodeChildren.length; i++) {\r\n      let childNode = this.traverseRevTree(nodeChildren[i], {});\r\n      newNode.children.push(childNode);\r\n    }\r\n\r\n    return newNode;\r\n  }\r\n\r\n  render() {\r\n    const treeData = this.generateTree();\r\n\r\n    let tree;\r\n    if (treeData) {\r\n      tree = <Tree\r\n        data={treeData}\r\n        height={300}\r\n        width={450}\r\n        svgProps={{ className: 'custom' }}\r\n        nodeOffset={-10}\r\n        nodeRadius={10}\r\n        margins={{ bottom: 0, left: 0, right: 100, top: 20 }}\r\n      />;\r\n    } else {\r\n      tree = <p>No tree to display</p>\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"tree-container\">\r\n          <h4>Revision Tree Visualizer</h4>\r\n          <Grid >\r\n            <Row className=\"show-grid\">\r\n              <Col md={3}>\r\n              {tree}\r\n              </Col>\r\n            </Row>\r\n          </Grid>\r\n        </div>\r\n      </div>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default TreeDisplay;\r\n","import React from 'react';\r\nimport { Button } from 'react-bootstrap';\r\n\r\nclass WinnerButton extends React.Component {\r\n  render() {\r\n    return (\r\n      <Button\r\n        bsStyle=\"primary\"\r\n        onClick={this.props.handlePickWinnerClick}\r\n      >\r\n        Make Winning Revision\r\n      </Button>\r\n    );\r\n  }\r\n}\r\n\r\nexport default WinnerButton;\r\n","import React from 'react';\r\nimport JSONPretty from 'react-json-pretty';\r\nimport { Grid, Row, Col } from 'react-bootstrap';\r\nimport './../../styles/json.css';\r\nimport WinnerButton from './WinnerButton';\r\n\r\nclass DocumentDisplay extends React.Component {\r\n  render() {\r\n    const doc = this.props.selectedTreeDoc ? this.props.selectedTreeDoc : {};\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"json-container\">\r\n          <h6>Document Revision</h6>\r\n          <Grid >\r\n            <Row className=\"show-grid\">\r\n              <Col md={3}>\r\n                <JSONPretty\r\n                  id=\"json-pretty\"\r\n                  json={doc}\r\n                ></JSONPretty>\r\n              </Col>\r\n            </Row>\r\n          </Grid>\r\n          <WinnerButton\r\n            handlePickWinnerClick={this.props.handlePickWinnerClick}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DocumentDisplay;\r\n","import React from 'react';\r\nimport { Grid, Row, Col } from 'react-bootstrap';\r\nimport TreeDisplay from './TreeDisplay';\r\nimport DocumentDisplay from './DocumentDisplay';\r\n\r\nclass TreeComponent extends React.Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Grid style={{marginTop: 40}}>\r\n          <Row className=\"show-grid\">\r\n            <Col md={4} xsOffset={1}>\r\n                <TreeDisplay\r\n                  selectedTreeMetaDoc={this.props.selectedTreeMetaDoc}\r\n                  handleTreeDocClick={this.props.handleTreeDocClick}\r\n                />\r\n                </Col>\r\n                <Col md={2} mdOffset={1}>\r\n                <DocumentDisplay\r\n                  selectedTreeDoc={this.props.selectedTreeDoc}\r\n                  handlePickWinnerClick={this.props.handlePickWinnerClick}\r\n                />\r\n              </Col>\r\n            </Row>\r\n        </Grid>\r\n      </div> \r\n    );\r\n  }\r\n}\r\n\r\nexport default TreeComponent;\r\n","import React from 'react';\r\n\r\nclass InsertDoc extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      name: \"\",\r\n      age: \"\",\r\n      email: \"\",\r\n      phone: \"\",\r\n      company: \"\"\r\n    };\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleInsertClick = this.handleInsertClick.bind(this);\r\n  }\r\n\r\n  handleInsertClick = event => {\r\n    event.preventDefault();\r\n    const insertObj = {\r\n      name: this.state.name,\r\n      age: parseInt(this.state.age, 10), \r\n      company: this.state.company,\r\n      email: this.state.email,\r\n      phone: this.state.phone\r\n    };\r\n    this.props.handleInsertClick(insertObj);\r\n  }\r\n\r\n  handleChange = event => {\r\n    const value = event.target.value;\r\n    const name = event.target.name;\r\n\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className='row'>\r\n        <div className=\"col\">\r\n          <form className=\"form-inline\" onSubmit={this.handleInsertClick}>\r\n            <div className=\"form-row\"> \r\n                <div className=\"form-group col\">\r\n                <label htmlFor=\"name\">Name</label>\r\n                <input type=\"text\" className=\"form-control\"  \r\n                  name=\"name\" \r\n                  value={this.props.name} onChange={this.handleChange} />\r\n                </div>\r\n            </div>\r\n            <div className=\"form-row\">\r\n                <div className=\"form-group col\">\r\n                <label htmlFor=\"age\">Age</label>\r\n                <input type=\"number\" className=\"form-control\"  \r\n                  name=\"age\" \r\n                  value={this.props.age} onChange={this.handleChange}/>\r\n                </div>\r\n            </div>\r\n            <div className=\"form-row\">\r\n                <div className=\"form-group col\">\r\n                <label htmlFor=\"email\">Email</label>\r\n                <input type=\"email\" className=\"form-control\" \r\n                  name=\"email\" \r\n                  value={this.props.email} onChange={this.handleChange}/>\r\n                </div>\r\n            </div>\r\n            <div className=\"form-row\">\r\n                <div className=\"form-group col\">\r\n                <label htmlFor=\"phone\">Phone</label>\r\n                <input type=\"phone\" className=\"form-control\" \r\n                  name=\"phone\"  \r\n                  value={this.props.phone} onChange={this.handleChange}/>\r\n                </div>\r\n            </div>\r\n            <div className=\"form-row\">\r\n                <div className=\"form-group col\">\r\n                <label htmlFor=\"company\">Company</label>\r\n                <input type=\"text\" className=\"form-control\" \r\n                  name=\"company\" \r\n                  value={this.props.company} onChange={this.handleChange}/>\r\n                </div>\r\n            </div>\r\n            <div style={{marginTop: 40}}>\r\n              <input className=\"btn btn-primary\" type=\"submit\" value=\"Save\" />\r\n              <button className=\"btn btn-danger\" value=\"cancel\" style={{paddingLeft: 10}} onClick={this.props.closeModal}>Cancel</button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default InsertDoc;\r\n","import React from 'react';\r\nimport { Grid, Row, Col, Button, FormGroup, Checkbox } from 'react-bootstrap';\r\nimport './../../styles/index.min.css';\r\n\r\nclass SyncButton extends React.Component {\r\n  render() {\r\n    return (\r\n      <div style={{marginTop: 40}}>\r\n        <div className=\"sync-container\">\r\n          <h4>Synchronize Database</h4>\r\n          <Grid >\r\n            <Row className=\"show-grid\">          \r\n              <Col md={3} xsOffset={3}>\r\n                <FormGroup>\r\n                  <Button\r\n                    style={{marginRight: 40}}\r\n                    bsStyle=\"primary\"\r\n                    onClick={this.props.handleSyncClick}\r\n                    disabled={this.props.autoSync}\r\n                    >Sync\r\n                  </Button>\r\n                  <Checkbox inline\r\n                    id=\"auto-sync-checkbox\"\r\n                    checked={this.props.autoSync}\r\n                    onChange={this.props.handleAutoSyncClick}\r\n                    >AutoSync\r\n                  </Checkbox>\r\n                </FormGroup>\r\n              </Col>\r\n            </Row>\r\n          </Grid>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SyncButton;\r\n","import React from 'react';\r\nimport InsertDoc from './InsertDoc';\r\nimport SyncButton from './SyncButton';\r\n\r\nclass ControlPanel extends React.Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h4>Insert into turtleDB</h4>\r\n        <InsertDoc handleInsertClick={this.props.handleInsertClick} />\r\n        <SyncButton \r\n          handleSyncClick={this.props.handleSyncClick}\r\n          handleAutoSyncClick={this.props.handleAutoSyncClick}\r\n          autoSync={this.props.autoSync}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ControlPanel;\r\n","import React, { Component } from \"react\";\r\nimport { Grid, Row, Col } from 'react-bootstrap';\r\n// Components\r\nimport TableComponent from './TableComponent/TableComponent';\r\nimport TreeComponent from './TreeComponent/TreeComponent';\r\nimport ControlPanel from './ControlPanel/ControlPanel';\r\n\r\nimport TurtleDB from 'turtledb';\r\nimport \"./MainPage.css\";\r\n\r\nconst dbName = \"demo\";\r\nconst turtleDB = new TurtleDB(dbName);\r\nturtleDB.setRemote('http://localhost:3000');\r\nwindow.turtleDB = turtleDB;\r\n\r\n\r\n\r\nexport default class MainPage extends Component {\r\n  constructor() {\r\n      super()\r\n      this.state = {\r\n          data: {\r\n            docs: [],\r\n            metaDocs: []\r\n          },\r\n          benchmark: {\r\n            time: null,\r\n            type: null,\r\n            count: null,\r\n          },\r\n          selectedTreeMetaDoc: null,\r\n          selectedTreeDoc: null,\r\n          autoSync: false,\r\n          storage: {\r\n            appUsage: \"0 B\",\r\n            appQuota: \"0 B\",\r\n            totalQuota: \"0 B\"\r\n          }\r\n      }\r\n  }\r\n\r\n  componentDidMount() {\r\n      this.syncStateWithTurtleDB();\r\n  }\r\n\r\n  setDefaultState = () => {\r\n      this.setState({\r\n        data: {\r\n          docs: [],\r\n          metaDocs: []\r\n        },\r\n        benchmark: {\r\n          time: null,\r\n          type: null,\r\n          count: null,\r\n        },\r\n        selectedTreeMetaDoc: null,\r\n        selectedTreeDoc: null,\r\n        autoSync: false,\r\n        storage: {\r\n          appUsage: \"0 B\",\r\n          appQuota: \"0 B\",\r\n          totalQuota: \"0 B\"\r\n        }\r\n      });\r\n  }\r\n\r\n  syncStateWithTurtleDB = () => {\r\n      turtleDB.readAllMetaDocsAndDocs()\r\n        .then(data => this.setState({ data: data }))\r\n        .then(() => this.updateTreeDocs())\r\n        .then(() => this.updateStorageInfo());\r\n  }\r\n\r\n  updateTreeDocs = () => {\r\n      if (this.state.selectedTreeMetaDoc) {\r\n        const updatedMetaDoc = this.state.data.metaDocs.find(metaDoc => metaDoc._id === this.state.selectedTreeMetaDoc._id);\r\n\r\n        if (updatedMetaDoc) {\r\n          this.setState({ selectedTreeMetaDoc: updatedMetaDoc });\r\n        } else {\r\n          this.setState({ selectedTreeMetaDoc: null });\r\n        }\r\n      }\r\n      this.setState({ selectedTreeDoc: null });\r\n  }\r\n\r\n  updateStorageInfo = () => {\r\n      turtleDB.getStorageInfo()\r\n        .then(info => this.setState({ storage: info }));\r\n  }\r\n\r\n  handleInsertClick = (obj) => {\r\n    let startTime = Date.now();\r\n      turtleDB.create(obj)\r\n      .then(() => {\r\n          let timeSpent = Date.now() - startTime;\r\n          this.setState({\r\n              benchmark: {\r\n              time: timeSpent,\r\n              type: \"INSERT\",\r\n              count: 1\r\n              }\r\n        })\r\n      })\r\n      .then(() => this.syncStateWithTurtleDB())\r\n  }\r\n\r\n  handleDeleteClick = n => {\r\n      let startTime = Date.now();\r\n      turtleDB.idb.deleteBetweenNumbers(0, n)\r\n        .then(() => {\r\n          let timeSpent = Date.now() - startTime;\r\n          this.setState({\r\n            benchmark: {\r\n              time: timeSpent,\r\n              type: \"DELETE\",\r\n              count: n\r\n            }\r\n          })\r\n        })\r\n        .then(() => this.syncStateWithTurtleDB())\r\n  }\r\n\r\n  handleUpdateClick = (n) => {\r\n      let startTime = Date.now();\r\n      turtleDB.editFirstNDocuments(n)\r\n        .then(() => {\r\n          let timeSpent = Date.now() - startTime;\r\n          this.setState({\r\n            benchmark: {\r\n              time: timeSpent,\r\n              type: \"EDIT\",\r\n              count: n\r\n            }\r\n          });\r\n        })\r\n        .then(() => this.syncStateWithTurtleDB())\r\n  }\r\n\r\n  handleDropDatabase = () => {\r\n      turtleDB.dropDB(dbName)\r\n        .then(() => this.setDefaultState());\r\n  }\r\n\r\n  handleSyncClick = () => {\r\n      turtleDB.sync()\r\n        .then(() => this.syncStateWithTurtleDB())\r\n        .catch((err) => console.log('Sync click -', err));\r\n  }\r\n\r\n  handleAutoSyncClick = () => {\r\n      if (this.state.autoSync) {\r\n        // if auto-sync on\r\n        turtleDB.autoSyncOff();\r\n        clearInterval(this.intervalId);\r\n      } else {\r\n        turtleDB.autoSyncOn();\r\n        this.intervalId = setInterval(this.syncStateWithTurtleDB.bind(this), 3000);\r\n      }\r\n\r\n      this.setState((prevState) => ({ autoSync: !prevState.autoSync }));\r\n  }\r\n\r\n  handleCompactClick = () => {\r\n      turtleDB.compactStore()\r\n        .then(() => this.syncStateWithTurtleDB());\r\n  }\r\n\r\n  handleViewTreeClick = (metaDoc) => {\r\n      this.setState({ selectedTreeMetaDoc: metaDoc });\r\n      this.setState({ selectedTreeDoc: null });\r\n  }\r\n\r\n  handleSingleUpdateClick = (obj) => {\r\n      turtleDB.update(obj._id, obj)\r\n        .then(() => this.syncStateWithTurtleDB())\r\n  }\r\n\r\n  handleSingleDeleteClick = (_id) => {\r\n      turtleDB.delete(_id)\r\n        .then(() => this.syncStateWithTurtleDB())\r\n  }\r\n\r\n  handleTreeDocClick = (_id, rev) => {\r\n      turtleDB.read(_id, rev)\r\n        .then(doc => {\r\n          this.setState({ selectedTreeDoc: doc })\r\n        });\r\n  }\r\n\r\n  handlePickWinnerClick = () => {\r\n      // access to doc in 'this.state.selectedTreeDoc'\r\n      console.log('Doc to select as winner:', this.state.selectedTreeDoc);\r\n      // {what: \"ever\", _id: \"a8fcdeaa-d8ef-4503-9762-d8499bbc571c\", _rev: \"3-ba09f2c2cf66edc8a5efee5e52a502a6\"}\r\n      const doc = this.state.selectedTreeDoc;\r\n      turtleDB.makeRevWinner(doc)\r\n        .then(() => {\r\n          this.syncStateWithTurtleDB();\r\n        });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Grid>\r\n        <Row className=\"show-grid\">\r\n          <Col md={2} xsOffset={1}>\r\n            <ControlPanel style={{marginTop: 40}}\r\n                handleInsertClick={this.handleInsertClick}\r\n                handleUpdateClick={this.handleUpdateClick}\r\n                handleDeleteClick={this.handleDeleteClick}\r\n                handleDropDatabase={this.handleDropDatabase}\r\n                handleSyncClick={this.handleSyncClick}\r\n                handleAutoSyncClick={this.handleAutoSyncClick}\r\n                autoSync={this.state.autoSync}\r\n                handleCompactClick={this.handleCompactClick}\r\n              />\r\n          </Col>\r\n          <Col >\r\n            <TreeComponent\r\n              selectedTreeMetaDoc={this.state.selectedTreeMetaDoc}\r\n              selectedTreeDoc={this.state.selectedTreeDoc}\r\n              handleTreeDocClick={this.handleTreeDocClick}\r\n              handlePickWinnerClick={this.handlePickWinnerClick}\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"show-grid\" style={{marginTop: 40}}>\r\n          <Col md={9} mdPush={1}>\r\n            <TableComponent\r\n                data={this.state.data}\r\n                handleSingleDeleteClick={this.handleSingleDeleteClick}\r\n                handleSingleUpdateClick={this.handleSingleUpdateClick}\r\n                handleViewTreeClick={this.handleViewTreeClick}\r\n              />\r\n          </Col>\r\n        </Row>\r\n      </Grid>\r\n    );\r\n  }\r\n}","import React, { Component } from \"react\";\r\nimport \"./Home.css\";\r\nimport MainPage from \"./MainPage\"\r\n\r\n\r\nexport default class Home extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      isLoading: true\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    if (!this.props.isAuthenticated) {\r\n      return;\r\n    }\r\n  \r\n    try {\r\n      this.setState({ isLoading: true });\r\n    } catch (e) {\r\n      alert(e);\r\n    }\r\n  \r\n    this.setState({ isLoading: false });\r\n  }\r\n\r\n  renderLanding() {\r\n    return (\r\n      <div className=\"Home\">\r\n        <div className=\"landing\">\r\n          <h1>DB POC</h1>\r\n          <p>A simple turtle DB POC</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderMainPage() {\r\n    return (\r\n      <MainPage />\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Home\">\r\n        {this.props.isAuthenticated ? this.renderMainPage() : this.renderLanding()}\r\n      </div>\r\n    );\r\n  }\r\n}","import React from \"react\";\r\nimport \"./PageNotFound.css\";\r\n\r\nexport default () =>\r\n  <div className=\"NotFound\">\r\n    <h3>Sorry, Page Not Found!</h3>\r\n  </div>;","import React from \"react\";\r\nimport { Button, Glyphicon } from \"react-bootstrap\";\r\nimport \"./LoaderButton.css\";\r\n\r\nexport default ({\r\n  isLoading,\r\n  text,\r\n  loadingText,\r\n  className = \"\",\r\n  disabled = false,\r\n  ...props\r\n}) =>\r\n  <Button\r\n    bsStyle=\"primary\"\r\n    className={`LoaderButton ${className}`}\r\n    disabled={disabled || isLoading}\r\n    {...props}\r\n  >\r\n    {isLoading && <Glyphicon glyph=\"refresh\" className=\"spinning\" />}\r\n    {!isLoading ? text : loadingText}\r\n  </Button>;","import React, { Component } from \"react\";\r\nimport { FormGroup, FormControl, ControlLabel } from \"react-bootstrap\";\r\nimport LoaderButton from \"./LoaderButton\";\r\n\r\nimport { Auth } from \"aws-amplify\";\r\nimport \"./Login.css\";\r\n\r\nexport default class Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      isLoading: false,\r\n      email: \"\",\r\n      password: \"\"\r\n    };\r\n  }\r\n\r\n  validateForm() {\r\n    return this.state.email.length > 0 && this.state.password.length > 0;\r\n  }\r\n\r\n  handleChange = event => {\r\n    this.setState({\r\n      [event.target.id]: event.target.value\r\n    });\r\n  }\r\n\r\n  handleSubmit = async event => {\r\n    event.preventDefault();\r\n  \r\n    this.setState({ isLoading: true });\r\n  \r\n    try {\r\n      await Auth.signIn(this.state.email, this.state.password);\r\n      this.props.userHasAuthenticated(true);\r\n    } catch (e) {\r\n      alert(e.message);\r\n      this.setState({ isLoading: false });\r\n    }\r\n  }\r\n\r\n  handleLogout = async event => {\r\n    await Auth.signOut();\r\n  \r\n    this.userHasAuthenticated(false);\r\n  \r\n    this.props.history.push(\"/login\");\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Login\">\r\n        <form onSubmit={this.handleSubmit}>\r\n          <FormGroup controlId=\"email\" bsSize=\"large\">\r\n            <ControlLabel>Email</ControlLabel>\r\n            <FormControl\r\n              autoFocus\r\n              type=\"email\"\r\n              value={this.state.email}\r\n              onChange={this.handleChange}\r\n            />\r\n          </FormGroup>\r\n          <FormGroup controlId=\"password\" bsSize=\"large\">\r\n            <ControlLabel>Password</ControlLabel>\r\n            <FormControl\r\n              value={this.state.password}\r\n              onChange={this.handleChange}\r\n              type=\"password\"\r\n            />\r\n          </FormGroup>\r\n          <LoaderButton\r\n            block\r\n            bsSize=\"large\"\r\n            disabled={!this.validateForm()}\r\n            type=\"submit\"\r\n            isLoading={this.state.isLoading}\r\n            text=\"Login\"\r\n            loadingText=\"Logging in…\"\r\n          />\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}","import React, { Component } from \"react\";\r\nimport {\r\n  HelpBlock,\r\n  FormGroup,\r\n  FormControl,\r\n  ControlLabel\r\n} from \"react-bootstrap\";\r\nimport LoaderButton from \"./LoaderButton\";\r\nimport \"./Signup.css\";\r\n\r\nexport default class Signup extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      isLoading: false,\r\n      email: \"\",\r\n      password: \"\",\r\n      confirmPassword: \"\",\r\n      confirmationCode: \"\",\r\n      newUser: null\r\n    };\r\n  }\r\n\r\n  validateForm() {\r\n    return (\r\n      this.state.email.length > 0 &&\r\n      this.state.password.length > 0 &&\r\n      this.state.password === this.state.confirmPassword\r\n    );\r\n  }\r\n\r\n  validateConfirmationForm() {\r\n    return this.state.confirmationCode.length > 0;\r\n  }\r\n\r\n  handleChange = event => {\r\n    this.setState({\r\n      [event.target.id]: event.target.value\r\n    });\r\n  }\r\n\r\n  handleSubmit = async event => {\r\n    event.preventDefault();\r\n\r\n    this.setState({ isLoading: true });\r\n\r\n    this.setState({ newUser: \"test\" });\r\n\r\n    this.setState({ isLoading: false });\r\n  }\r\n\r\n  handleConfirmationSubmit = async event => {\r\n    event.preventDefault();\r\n\r\n    this.setState({ isLoading: true });\r\n  }\r\n\r\n  renderConfirmationForm() {\r\n    return (\r\n      <form onSubmit={this.handleConfirmationSubmit}>\r\n        <FormGroup controlId=\"confirmationCode\" bsSize=\"large\">\r\n          <ControlLabel>Confirmation Code</ControlLabel>\r\n          <FormControl\r\n            autoFocus\r\n            type=\"tel\"\r\n            value={this.state.confirmationCode}\r\n            onChange={this.handleChange}\r\n          />\r\n          <HelpBlock>Please check your email for the code.</HelpBlock>\r\n        </FormGroup>\r\n        <LoaderButton\r\n          block\r\n          bsSize=\"large\"\r\n          disabled={!this.validateConfirmationForm()}\r\n          type=\"submit\"\r\n          isLoading={this.state.isLoading}\r\n          text=\"Verify\"\r\n          loadingText=\"Verifying…\"\r\n        />\r\n      </form>\r\n    );\r\n  }\r\n\r\n  renderForm() {\r\n    return (\r\n      <form onSubmit={this.handleSubmit}>\r\n        <FormGroup controlId=\"email\" bsSize=\"large\">\r\n          <ControlLabel>Email</ControlLabel>\r\n          <FormControl\r\n            autoFocus\r\n            type=\"email\"\r\n            value={this.state.email}\r\n            onChange={this.handleChange}\r\n          />\r\n        </FormGroup>\r\n        <FormGroup controlId=\"password\" bsSize=\"large\">\r\n          <ControlLabel>Password</ControlLabel>\r\n          <FormControl\r\n            value={this.state.password}\r\n            onChange={this.handleChange}\r\n            type=\"password\"\r\n          />\r\n        </FormGroup>\r\n        <FormGroup controlId=\"confirmPassword\" bsSize=\"large\">\r\n          <ControlLabel>Confirm Password</ControlLabel>\r\n          <FormControl\r\n            value={this.state.confirmPassword}\r\n            onChange={this.handleChange}\r\n            type=\"password\"\r\n          />\r\n        </FormGroup>\r\n        <LoaderButton\r\n          block\r\n          bsSize=\"large\"\r\n          disabled={!this.validateForm()}\r\n          type=\"submit\"\r\n          isLoading={this.state.isLoading}\r\n          text=\"Signup\"\r\n          loadingText=\"Signing up…\"\r\n        />\r\n      </form>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Signup\">\r\n        {this.state.newUser === null\r\n          ? this.renderForm()\r\n          : this.renderConfirmationForm()}\r\n      </div>\r\n    );\r\n  }\r\n}","import React from \"react\";\r\nimport { Route } from \"react-router-dom\";\r\n\r\nexport default ({ component: C, props: cProps, ...rest }) =>\r\n  <Route {...rest} render={props => <C {...props} {...cProps} />} />;","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n\r\nexport default ({ component: C, props: cProps, ...rest }) =>\r\n  <Route\r\n    {...rest}\r\n    render={props =>\r\n      cProps.isAuthenticated\r\n        ? <C {...props} {...cProps} />\r\n        : <Redirect\r\n            to={`/login?redirect=${props.location.pathname}${props.location\r\n              .search}`}\r\n          />}\r\n  />;","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n\r\nfunction querystring(name, url = window.location.href) {\r\n    name = name.replace(/[[]]/g, \"\\\\$&\");\r\n  \r\n    const regex = new RegExp(\"[?&]\" + name + \"(=([^&#]*)|&|#|$)\", \"i\");\r\n    const results = regex.exec(url);\r\n  \r\n    if (!results) {\r\n      return null;\r\n    }\r\n    if (!results[2]) {\r\n      return \"\";\r\n    }\r\n  \r\n    return decodeURIComponent(results[2].replace(/\\+/g, \" \"));\r\n}\r\n\r\nexport default ({ component: C, props: cProps, ...rest }) => {\r\n    const redirect = querystring(\"redirect\");\r\n    return (\r\n      <Route\r\n        {...rest}\r\n        render={props =>\r\n          !cProps.isAuthenticated\r\n            ? <C {...props} {...cProps} />\r\n            : <Redirect\r\n                to={redirect === \"\" || redirect === null ? \"/\" : redirect}\r\n              />}\r\n      />\r\n    );\r\n};","import React from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport Home from \"./components/Home\";\r\nimport PageNotFound from \"./components/PageNotFound\"\r\nimport Login from \"./components/Login\"\r\nimport Signup from \"./components/Signup\"\r\nimport MainPage from \"./components/MainPage\"\r\nimport AppliedRoute from \"./routes/AppliedRoute\"\r\nimport AuthenticatedRoute from \"./routes/AuthenticatedRoute\";\r\nimport UnauthenticatedRoute from \"./routes/UnauthenticatedRoute\";\r\n\r\nexport default ({ childProps }) =>\r\n  <Switch>\r\n    <AppliedRoute path=\"/\" exact component={Home} props={childProps} />\r\n    <UnauthenticatedRoute  path=\"/login\" exact component={Login} props={childProps} />\r\n    <UnauthenticatedRoute  path=\"/signup\" exact component={Signup} props={childProps} />\r\n    <AuthenticatedRoute  path=\"/main\" exact component={MainPage} props={childProps} />\r\n    \r\n    { /* Finally, catch all unmatched routes */ }\r\n    <Route component={PageNotFound} />\r\n  </Switch>;","import { LinkContainer } from \"react-router-bootstrap\";\r\nimport React, { Component, Fragment } from 'react';\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport { Nav, Navbar, NavItem } from \"react-bootstrap\";\r\nimport { Auth } from \"aws-amplify\";\r\n\r\nimport './App.css';\r\nimport Routes from \"./Routes\";\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  \r\n    this.state = {\r\n      isAuthenticated: false,\r\n      isAuthenticating: true\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    try {\r\n      await Auth.currentSession();\r\n      this.userHasAuthenticated(true);\r\n    }\r\n    catch(e) {\r\n      if (e !== 'No current user') {\r\n        alert(e);\r\n      }\r\n    }\r\n  \r\n    this.setState({ isAuthenticating: false });\r\n  }\r\n  \r\n  userHasAuthenticated = authenticated => {\r\n    this.setState({ isAuthenticated: authenticated });\r\n  }\r\n\r\n  handleLogout = async event => {\r\n    await Auth.signOut();  \r\n    this.userHasAuthenticated(false);\r\n  }\r\n\r\n  render() {\r\n    const childProps = {\r\n      isAuthenticated: this.state.isAuthenticated,\r\n      userHasAuthenticated: this.userHasAuthenticated\r\n    };\r\n  \r\n    return (\r\n      !this.state.isAuthenticating &&\r\n      <div className=\"App container\">\r\n        <Navbar fluid collapseOnSelect>\r\n          <Navbar.Header>\r\n            <Navbar.Brand>\r\n              <Link to=\"/\">DB POC</Link>\r\n            </Navbar.Brand>\r\n            <Navbar.Toggle />\r\n          </Navbar.Header>\r\n          <Navbar.Collapse>\r\n            <Nav pullRight>\r\n              {this.state.isAuthenticated\r\n                ? <NavItem onClick={this.handleLogout}>Logout</NavItem>\r\n                : <Fragment>\r\n                    <LinkContainer to=\"/signup\">\r\n                      <NavItem>Signup</NavItem>\r\n                    </LinkContainer>\r\n                    <LinkContainer to=\"/login\">\r\n                      <NavItem>Login</NavItem>\r\n                    </LinkContainer>\r\n                  </Fragment>\r\n              }\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </Navbar>\r\n        <Routes childProps={childProps} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(App);\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\nimport Amplify from \"aws-amplify\";\r\nimport config from \"./config\";\r\n\r\n//import './assets/css/bootstrap.min.css';\r\nimport './styles/index.min.css';\r\nimport './styles/tree.css';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nif (process.env.NODE_ENV !== 'production') {\r\n  localStorage.setItem('debug', 'turtleDB:*');\r\n}\r\n\r\nAmplify.configure({\r\n    Auth: {\r\n      mandatorySignIn: true,\r\n      region: config.cognito.REGION,\r\n      userPoolId: config.cognito.USER_POOL_ID,\r\n      identityPoolId: config.cognito.IDENTITY_POOL_ID,\r\n      userPoolWebClientId: config.cognito.APP_CLIENT_ID\r\n    }\r\n  });\r\n\r\nReactDOM.render(\r\n    <Router>\r\n      <App />\r\n    </Router>,\r\n    document.getElementById(\"root\")\r\n  );"],"sourceRoot":""}